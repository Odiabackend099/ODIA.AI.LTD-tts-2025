version: '3.8'

services:
  dia-tts:
    build:
      context: .
      dockerfile: dia/docker/Dockerfile.gpu
    image: dia-tts:latest
    container_name: dia-tts
    ports:
      - "8000:8000"
      - "9090:9090"
    environment:
      - ENVIRONMENT=production
      - MODEL_DEVICE=cuda
      - MODEL_DTYPE=float16
      - LOG_LEVEL=INFO
      - LOG_FORMAT=json
      - ENABLE_METRICS=true
      - RATE_LIMIT_PER_MINUTE=10
      - MAX_FILE_SIZE=52428800
      - MAX_TEXT_LENGTH=10000
    volumes:
      - ./logs:/app/logs
      - ./cache:/app/cache
    deploy:
      resources:
        reservations:
          devices:
            - driver: nvidia
              count: 1
              capabilities: [gpu]
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/api/v1/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s
    restart: unless-stopped

  # CPU-only version (uncomment to use)
  # dia-tts-cpu:
  #   build:
  #     context: .
  #     dockerfile: dia/docker/Dockerfile.cpu
  #   image: dia-tts-cpu:latest
  #   container_name: dia-tts-cpu
  #   ports:
  #     - "8001:8000"
  #     - "9091:9090"
  #   environment:
  #     - ENVIRONMENT=production
  #     - MODEL_DEVICE=cpu
  #     - MODEL_DTYPE=float32
  #     - LOG_LEVEL=INFO
  #     - LOG_FORMAT=json
  #     - ENABLE_METRICS=true
  #     - RATE_LIMIT_PER_MINUTE=5
  #     - MAX_FILE_SIZE=52428800
  #     - MAX_TEXT_LENGTH=10000
  #   volumes:
  #     - ./logs:/app/logs
  #     - ./cache:/app/cache
  #   healthcheck:
  #     test: ["CMD", "curl", "-f", "http://localhost:8000/api/v1/health"]
  #     interval: 30s
  #     timeout: 10s
  #     retries: 3
  #     start_period: 60s
  #   restart: unless-stopped

  # Redis for caching (optional)
  redis:
    image: redis:7-alpine
    container_name: dia-tts-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    restart: unless-stopped
    command: redis-server --appendonly yes

  # Prometheus for metrics (optional)
  prometheus:
    image: prom/prometheus:latest
    container_name: dia-tts-prometheus
    ports:
      - "9091:9090"
    volumes:
      - ./monitoring/prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--web.enable-lifecycle'
    restart: unless-stopped

  # Grafana for monitoring (optional)
  grafana:
    image: grafana/grafana:latest
    container_name: dia-tts-grafana
    ports:
      - "3000:3000"
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin
    volumes:
      - grafana_data:/var/lib/grafana
      - ./monitoring/grafana/dashboards:/etc/grafana/provisioning/dashboards
      - ./monitoring/grafana/datasources:/etc/grafana/provisioning/datasources
    restart: unless-stopped

volumes:
  redis_data:
  prometheus_data:
  grafana_data:
